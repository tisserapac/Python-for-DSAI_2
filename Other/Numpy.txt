Fancy indexing
row = [2, 1, 0]
col = [2]

np_y[row, col]

===========
even = []

for num in x:
    if num % 2 == 0:
        even.append(num)
        
#2nd way: list comprehension

even = [ num for num in x if num % 2 == 0]

===========

np_x = np.arange(10)

===========

Broadcasting
[1,            [5
 2,  x   5   =  10
 3]             15]

===========

X_i = X_i.reshape(1, -1)

===========

batch_size = int(X_train.shape[0] / 10)
for index in range(0, X_train.shape[0], batch_size):
    batch = X_train[index:index + batch_size]
    print(batch.shape)

===========

#4. while
x = 5

while (x < 10):  #as long as x is less than 10, do below
    print(x)
    x = x + 1

===========

for each_num in x:
    print(each_num)

===========

Tuple
x = (1, 3, 5, 7, 9)

===========

Dictionary
some_dict = {
    "name"  : "Chaky",
    "age"   : "I won't tell you",
    "gender": 'M',
    "ID"    : '101-13332'    
}

some_dict['name']

===========

if self.color == 'red':
            self.price = 2
        elif self.color == 'blue':
            self.price = 4
        else :
            self.price = 6

===========

for i in range(3):
    print("1: I: ", i)

some_list = [8, 9, 10]

for num in some_list:
    print("2: ", num)

for i in range(len(some_list)):
    print("3: ", some_list[i])    

for ix, (value) in enumerate(some_list):
    print(f"4: Index: {ix}; value: {value}")


===========

a = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])
index = [2, 3, 6]

new_a = np.delete(a, index)

print(new_a) #Prints `[1, 2, 5, 6, 8, 9]`

===========

Looping a dictionary

for key, value in some_dict.items():
    print(f"2: {key} = {value}")

for key, value in sorted(some_dict.items()):
    print(f"3: {key} = {value}")

for index, (key,value) in enumerate(some_dict.items()):
    print(f"{index}: {key} = {value}")

===========

print(name, salary, gender, sep=":")

===========

grep -Ril --exclude-dir=.venv ValueError

===========
ctrl+D
===========
===========

===========

===========